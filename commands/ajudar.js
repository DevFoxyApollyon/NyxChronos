const { EmbedBuilder, ActionRowBuilder, ButtonBuilder, ButtonStyle, SlashCommandBuilder } = require('discord.js');
const { Servidor } = require('../models/Servidor');

// Configura√ß√£o do comando slash
const commandData = new SlashCommandBuilder()
    .setName('ajudar')
    .setDescription('Mostra informa√ß√µes sobre os comandos dispon√≠veis')
    .setDMPermission(false);

const PAGES = {
  main: {
    title: 'üìö Central de Ajuda',
    description: 'Bem-vindo ao menu de ajuda! Aqui voc√™ encontrar√° informa√ß√µes sobre todos os comandos dispon√≠veis.\n\nSelecione uma op√ß√£o abaixo para saber mais:',
    fields: [
      {
        name: 'üìù Comandos Principais',
        value: '‚Ä¢ `/ponto` - Inicia um novo cart√£o de ponto\n' +
               '‚Ä¢ `/horas` - Mostra suas horas acumuladas\n' +
               '‚Ä¢ `/top` - Mostra o ranking de horas\n' +
               '‚Ä¢ `/justificativa` - Justifica suas horas (substitui as horas por "J")\n' +
               '‚Ä¢ `/cartoes` - Visualiza seus cart√µes de ponto\n' +
               '‚Ä¢ `/cancelar` - Cancela um cart√£o de ponto (apenas administradores)\n' +
               '‚Ä¢ `/reportar` - Reporta um problema ao suporte (apenas para casos necess√°rios)'
      },
      {
        name: '‚öôÔ∏è Comandos Administrativos',
        value: '‚Ä¢ `/cargos` - Gerencia cargos do servidor\n' +
               '‚Ä¢ `/planilha` - Configura a planilha\n' +
               '‚Ä¢ `/painel` - Exibe o painel de controle'
      }
    ],
    color: '#0099ff',
    footer: 'Selecione uma op√ß√£o abaixo para saber mais'
  },
  tutorial: {
    title: 'üìñ Tutorial do Sistema',
    description: 'Aprenda a usar o sistema de ponto passo a passo:',
    fields: [
      {
        name: 'üìù Como Iniciar',
        value: `
        1. Use **/ponto** para come√ßar um novo cart√£o de ponto
        2. O bot criar√° uma mensagem com seu cart√£o de ponto
        3. Seu tempo come√ßar√° a ser contabilizado automaticamente
        4. Use **/cartoes** para visualizar todos os seus cart√µes de ponto
        `
      },
      {
        name: '‚è∏Ô∏è Pausando e Retomando',
        value: `
        1. Use o bot√£o **‚è∏Ô∏è Pausar** quando precisar fazer uma pausa
        2. Use o bot√£o **üîÑ Voltar** para retomar o cart√£o
        3. O tempo pausado n√£o ser√° contabilizado
        `
      },
      {
        name: '‚úÖ Finalizando',
        value: `
        1. Use o bot√£o **üî¥ Finalizar** para encerrar seu cart√£o
        2. O tempo total ser√° calculado automaticamente
        3. Seu cart√£o ser√° arquivado para consulta futura
        4. Se precisar justificar uma aus√™ncia ou atraso, use o comando **/justificativa**
        5. Se precisar cancelar um cart√£o de ponto (apenas administradores), use o comando **/cancelar**
        `
      },
      {
        name: '‚ö†Ô∏è Importante',
        value: `
        ‚Ä¢ N√£o esque√ßa de finalizar seu cart√£o ao terminar
        ‚Ä¢ O tempo √© calculado automaticamente
        ‚Ä¢ Administradores podem ajustar tempos se necess√°rio
        ‚Ä¢ Apenas administradores podem cancelar cart√µes
        ‚Ä¢ Ao justificar um dia, as horas ser√£o zeradas e aparecer√° um "J" no lugar
        ‚Ä¢ A justificativa pode ser vista ao passar o mouse sobre o "J" na planilha
        `
      },
      {
        name: 'üì¢ Sobre o comando /reportar',
        value: `
        ‚Ä¢ O comando **/reportar** deve ser usado apenas se necess√°rio, para relatar problemas ou situa√ß√µes excepcionais.
        ‚Ä¢ Apenas usu√°rios com o cargo <@&ID_DO_CARGO> podem utilizar este comando.
        ‚Ä¢ Use com responsabilidade para garantir o bom funcionamento do sistema.
        `
      }
    ],
    color: '#00ff00',
    footer: 'Selecione uma op√ß√£o abaixo para navegar'
  },
  support: {
    title: '‚ùì Central de Suporte',
    description: 'Precisa de ajuda? Aqui est√£o suas op√ß√µes:\n\nSelecione uma op√ß√£o abaixo para navegar:',
    fields: [
      {
        name: 'üìû Contato',
        value: 'Se voc√™ encontrar algum problema ou tiver d√∫vidas, entre em contato com o suporte: <@657014871228940336>'
      },
      {
        name: '‚ö†Ô∏è Problemas Comuns',
        value: '‚Ä¢ Se o bot n√£o responder, verifique se ele tem as permiss√µes necess√°rias\n' +
               '‚Ä¢ Se os bot√µes n√£o funcionarem, tente usar o comando novamente\n' +
               '‚Ä¢ Se o ponto n√£o estiver sendo registrado, verifique se voc√™ est√° no canal correto'
      }
    ],
    color: '#ff0000',
    footer: 'Selecione uma op√ß√£o abaixo para navegar'
  }
};

// Fun√ß√£o para gerar a embed de comandos
function generateCommandsEmbed(interaction) {
    return new EmbedBuilder()
        .setColor('#0099ff')
        .setTitle('üìö Central de Ajuda')
        .setDescription('Aqui est√° a lista de todos os comandos e funcionalidades dispon√≠veis:')
        .addFields(
            {
                name: 'üîÑ Sistema de Ponto',
                value: `
                O sistema de ponto funciona atrav√©s de bot√µes interativos:
                
                **üü¢ Iniciar** - Inicia um novo cart√£o de ponto
                **‚è∏Ô∏è Pausar** - Pausa o cart√£o de ponto atual
                **üîÑ Voltar** - Retoma o cart√£o de ponto pausado
                **üî¥ Finalizar** - Finaliza o cart√£o de ponto atual
                **‚ùå Cancelar** - Cancela um cart√£o de ponto (apenas administradores)
                `
            },
            {
                name: '‚öôÔ∏è Comandos de Administra√ß√£o',
                value: `
                **/painel** - Configura o painel de administra√ß√£o
                **/planilha** - Configura a planilha do servidor
                **/cargos** - Gerencia cargos do servidor
                `
            }
        )
        .setFooter({
            text: 'Sistema de Ponto ‚Ä¢ Desenvolvido por toca da raposa',
            iconURL: interaction.guild.iconURL() || null
        })
        .setTimestamp();
}

// Fun√ß√£o para gerar a embed de tutorial
function generateTutorialEmbed(interaction) {
    return new EmbedBuilder()
        .setColor('#00ff00')
        .setTitle('üéì Tutorial do Sistema de Ponto')
        .setDescription('Aprenda a usar o sistema de ponto passo a passo:')
        .addFields(
            {
                name: 'üìù Como Iniciar',
                value: `
                1. Use **/ponto** para come√ßar um novo cart√£o de ponto
                2. O bot criar√° uma mensagem com seu cart√£o de ponto
                3. Seu tempo come√ßar√° a ser contabilizado automaticamente
                4. Use **/cartoes** para visualizar todos os seus cart√µes de ponto
                `
            },
            {
                name: '‚è∏Ô∏è Pausando e Retomando',
                value: `
                1. Use o bot√£o **‚è∏Ô∏è Pausar** quando precisar fazer uma pausa
                2. Use o bot√£o **üîÑ Voltar** para retomar o cart√£o
                3. O tempo pausado n√£o ser√° contabilizado
                `
            },
            {
                name: '‚úÖ Finalizando',
                value: `
                1. Use o bot√£o **üî¥ Finalizar** para encerrar seu cart√£o
                2. O tempo total ser√° calculado automaticamente
                3. Seu cart√£o ser√° arquivado para consulta futura
                4. Se precisar justificar uma aus√™ncia ou atraso, use o comando **/justificativa**
                5. Se precisar cancelar um cart√£o de ponto (apenas administradores), use o comando **/cancelar**
                `
            },
            {
                name: '‚ö†Ô∏è Importante',
                value: `
                ‚Ä¢ N√£o esque√ßa de finalizar seu cart√£o ao terminar
                ‚Ä¢ O tempo √© calculado automaticamente
                ‚Ä¢ Administradores podem ajustar tempos se necess√°rio
                ‚Ä¢ Apenas administradores podem cancelar cart√µes
                ‚Ä¢ Ao justificar um dia, as horas ser√£o zeradas e aparecer√° um "J" no lugar
                ‚Ä¢ A justificativa pode ser vista ao passar o mouse sobre o "J" na planilha
                `
            }
        )
        .setFooter({
            text: 'Sistema de Ponto ‚Ä¢ Desenvolvido por toca da raposa',
            iconURL: interaction.guild.iconURL() || null
        })
        .setTimestamp();
}

// Fun√ß√£o para gerar a embed de suporte
function generateSupportEmbed(interaction) {
    return new EmbedBuilder()
        .setColor('#ff0000')
        .setTitle('üÜò Central de Suporte')
        .setDescription('Precisa de ajuda? Aqui est√£o as op√ß√µes de suporte:')
        .addFields(
            {
                name: 'üìû Suporte T√©cnico',
                value: `
                ‚Ä¢ Entre em contato com os administradores do servidor
                ‚Ä¢ Use o canal de suporte do servidor
                ‚Ä¢ Reporte problemas imediatamente
                `
            },
            {
                name: '‚ùì Perguntas Frequentes',
                value: `
                ‚Ä¢ Consulte o tutorial usando **/ajudar**
                ‚Ä¢ Verifique as regras do servidor
                ‚Ä¢ Leia os avisos no canal de an√∫ncios
                `
            },
            {
                name: 'üì¢ Informa√ß√µes Importantes',
                value: `
                ‚Ä¢ Mantenha seu cart√£o de ponto atualizado
                ‚Ä¢ Use os bot√µes corretamente
                ‚Ä¢ Siga as instru√ß√µes dos administradores
                ‚Ä¢ N√£o abuse do sistema de ponto
                `
            }
        )
        .setFooter({
            text: 'Sistema de Ponto ‚Ä¢ Desenvolvido por toca da raposa',
            iconURL: interaction.guild.iconURL() || null
        })
        .setTimestamp();
}

// Fun√ß√£o para criar os bot√µes de navega√ß√£o
function createNavigationButtons() {
    return new ActionRowBuilder()
        .addComponents(
            new ButtonBuilder()
                .setCustomId('help_commands')
                .setLabel('Comandos')
                .setStyle(ButtonStyle.Primary)
                .setEmoji('üìù'),
            new ButtonBuilder()
                .setCustomId('help_tutorial')
                .setLabel('üìñ Tutorial do Sistema')
                .setStyle(ButtonStyle.Secondary),
            new ButtonBuilder()
                .setCustomId('help_support')
                .setLabel('‚ùì Suporte')
                .setStyle(ButtonStyle.Success)
                .setEmoji('üÜò')
        );
}

async function handleAjudarCommand(interaction) {
  // Buscar o cargo permitido do banco de dados
  const servidor = await Servidor.findOne({ guildId: interaction.guildId });
  const cargoPermitidoId = servidor?.cargoPermitido || 'ID_DO_CARGO';

  // Atualizar o campo do tutorial dinamicamente
  const tutorialFields = [
    {
      name: 'üìù Como Iniciar',
      value: `
      1. Use **/ponto** para come√ßar um novo cart√£o de ponto
      2. O bot criar√° uma mensagem com seu cart√£o de ponto
      3. Seu tempo come√ßar√° a ser contabilizado automaticamente
      4. Use **/cartoes** para visualizar todos os seus cart√µes de ponto
      `
    },
    {
      name: '‚è∏Ô∏è Pausando e Retomando',
      value: `
      1. Use o bot√£o **‚è∏Ô∏è Pausar** quando precisar fazer uma pausa
      2. Use o bot√£o **üîÑ Voltar** para retomar o cart√£o
      3. O tempo pausado n√£o ser√° contabilizado
      `
    },
    {
      name: '‚úÖ Finalizando',
      value: `
      1. Use o bot√£o **üî¥ Finalizar** para encerrar seu cart√£o
      2. O tempo total ser√° calculado automaticamente
      3. Seu cart√£o ser√° arquivado para consulta futura
      4. Se precisar justificar uma aus√™ncia ou atraso, use o comando **/justificativa**
      5. Se precisar cancelar um cart√£o de ponto (apenas administradores), use o comando **/cancelar**
      `
    },
    {
      name: '‚ö†Ô∏è Importante',
      value: `
      ‚Ä¢ N√£o esque√ßa de finalizar seu cart√£o ao terminar
      ‚Ä¢ O tempo √© calculado automaticamente
      ‚Ä¢ Administradores podem ajustar tempos se necess√°rio
      ‚Ä¢ Apenas administradores podem cancelar cart√µes
      ‚Ä¢ Ao justificar um dia, as horas ser√£o zeradas e aparecer√° um "J" no lugar
      ‚Ä¢ A justificativa pode ser vista ao passar o mouse sobre o "J" na planilha
      `
    },
    {
      name: 'üì¢ Sobre o comando /reportar',
      value: `
      ‚Ä¢ O comando **/reportar** deve ser usado apenas se necess√°rio, para relatar problemas ou situa√ß√µes excepcionais.
      ‚Ä¢ Apenas usu√°rios com o cargo <@&${cargoPermitidoId}> podem utilizar este comando.
      ‚Ä¢ Use com responsabilidade para garantir o bom funcionamento do sistema.
      `
    }
  ];

  // Atualizar os campos do menu principal dinamicamente
  const mainFields = [
    {
      name: 'üìù Comandos Principais',
      value: '‚Ä¢ `/ponto` - Inicia um novo cart√£o de ponto\n' +
             '‚Ä¢ `/horas` - Mostra suas horas acumuladas\n' +
             '‚Ä¢ `/top` - Mostra o ranking de horas\n' +
             '‚Ä¢ `/justificativa` - Justifica suas horas (substitui as horas por "J")\n' +
             '‚Ä¢ `/cartoes` - Visualiza seus cart√µes de ponto\n' +
             '‚Ä¢ `/cancelar` - Cancela um cart√£o de ponto (apenas administradores)\n' +
             '‚Ä¢ `/reportar` - Reporta um problema ao suporte (apenas para casos necess√°rios)\n' +
             `‚Ä¢ Apenas usu√°rios com o cargo <@&${cargoPermitidoId}> podem usar /reportar.`
    },
    {
      name: '‚öôÔ∏è Comandos Administrativos',
      value: '‚Ä¢ `/cargos` - Gerencia cargos do servidor\n' +
             '‚Ä¢ `/planilha` - Configura a planilha\n' +
             '‚Ä¢ `/painel` - Exibe o painel de controle'
    }
  ];

  const embed = new EmbedBuilder()
    .setTitle('üìö Central de Ajuda')
    .setDescription('Bem-vindo ao menu de ajuda! Aqui voc√™ encontrar√° informa√ß√µes sobre todos os comandos dispon√≠veis.\n\nSelecione uma op√ß√£o abaixo para saber mais:')
    .setColor('#5865F2')
    .setThumbnail(interaction.guild.iconURL({ dynamic: true }) || null)
    .addFields(
      {
        name: 'üìù Comandos Principais',
        value: '‚Ä¢ `/ponto` - Inicia um novo cart√£o de ponto\n' +
               '‚Ä¢ `/horas` - Mostra suas horas acumuladas\n' +
               '‚Ä¢ `/top` - Mostra o ranking de horas\n' +
               '‚Ä¢ `/justificativa` - Justifica suas horas (substitui as horas por "J")\n' +
               '‚Ä¢ `/cartoes` - Visualiza seus cart√µes de ponto\n' +
               '‚Ä¢ `/cancelar` - Cancela um cart√£o de ponto (apenas administradores)\n' +
               '‚Ä¢ `/reportar` - Reporta um problema ao suporte (apenas para casos necess√°rios)\n' +
               `‚Ä¢ Apenas usu√°rios com o cargo <@&${cargoPermitidoId}> podem usar /reportar.`
      },
      {
        name: '\u200B',
        value: '‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ',
        inline: false
      },
      {
        name: '‚öôÔ∏è Comandos Administrativos',
        value: '‚Ä¢ `/cargos` - Gerencia cargos do servidor\n' +
               '‚Ä¢ `/planilha` - Configura a planilha\n' +
               '‚Ä¢ `/painel` - Exibe o painel de controle'
      },
      {
        name: '\u200B',
        value: '‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ',
        inline: false
      },
      {
        name: '‚ÑπÔ∏è Dicas R√°pidas',
        value: '‚Ä¢ Use os bot√µes abaixo para navegar entre tutorial e suporte.\n‚Ä¢ Se tiver d√∫vidas, clique em "‚ùì Suporte".'
      }
    )
    .setFooter({
      text: 'Sistema de Ponto ‚Ä¢ Desenvolvido por Toca da Raposa',
      iconURL: interaction.client.user.displayAvatarURL()
    })
    .setTimestamp();

  const tutorialEmbed = new EmbedBuilder()
    .setTitle(PAGES.tutorial.title)
    .setDescription(PAGES.tutorial.description)
    .setColor(PAGES.tutorial.color)
    .addFields(tutorialFields)
    .setFooter({ text: PAGES.tutorial.footer })
    .setTimestamp();

  const row = new ActionRowBuilder()
    .addComponents(
      new ButtonBuilder()
        .setCustomId('help_tutorial')
        .setLabel('üìñ Tutorial do Sistema')
        .setStyle(ButtonStyle.Primary),
      new ButtonBuilder()
        .setCustomId('help_support')
        .setLabel('‚ùì Suporte')
        .setStyle(ButtonStyle.Secondary)
    );

  const message = await interaction.reply({ embeds: [embed], components: [row], fetchReply: true });

  // Configurar o timeout para deletar a mensagem ap√≥s 5 minutos
  setTimeout(async () => {
    try {
      await message.delete();
    } catch (error) {
      console.error('Erro ao deletar mensagem:', error);
    }
  }, 5 * 60 * 1000); // 5 minutos em milissegundos

  // Salvar o tutorialEmbed para uso nos bot√µes
  interaction.client._ajudaTutorialEmbed = tutorialEmbed;
}

// Fun√ß√£o para lidar com as intera√ß√µes dos bot√µes
async function handleHelpButton(interaction) {
  const page = interaction.customId.split('_')[1];
  
  // Se estiver no menu principal e clicar em "Menu Principal", n√£o faz nada
  if (page === 'main' && interaction.message.embeds[0].title === PAGES.main.title) {
    return;
  }

  let embed;
  if (page === 'tutorial' && interaction.client._ajudaTutorialEmbed) {
    embed = interaction.client._ajudaTutorialEmbed;
  } else {
    embed = new EmbedBuilder()
      .setTitle(PAGES[page].title)
      .setDescription(PAGES[page].description)
      .setColor(PAGES[page].color)
      .addFields(PAGES[page].fields)
      .setFooter({ text: PAGES[page].footer })
      .setTimestamp();
  }

  const row = new ActionRowBuilder()
    .addComponents(
      new ButtonBuilder()
        .setCustomId('help_main')
        .setLabel('üè† Menu Principal')
        .setStyle(ButtonStyle.Primary)
        .setDisabled(page === 'main'), // Desabilita o bot√£o se j√° estiver na p√°gina principal
      new ButtonBuilder()
        .setCustomId('help_tutorial')
        .setLabel('üìñ Tutorial do Sistema')
        .setStyle(ButtonStyle.Secondary)
        .setDisabled(page === 'tutorial'), // Desabilita o bot√£o se j√° estiver na p√°gina de tutorial
      new ButtonBuilder()
        .setCustomId('help_support')
        .setLabel('‚ùì Suporte')
        .setStyle(ButtonStyle.Secondary)
        .setDisabled(page === 'support') // Desabilita o bot√£o se j√° estiver na p√°gina de suporte
    );

  await interaction.update({ embeds: [embed], components: [row] });
}

module.exports = { 
    data: commandData,
    handleAjudarCommand,
    handleHelpButton
}; 